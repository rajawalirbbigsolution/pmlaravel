<?php
 namespace Symfony\Component\Translation\Writer; use Symfony\Component\Translation\MessageCatalogue; use Symfony\Component\Translation\Dumper\DumperInterface; use Symfony\Component\Translation\Exception\InvalidArgumentException; use Symfony\Component\Translation\Exception\RuntimeException; class TranslationWriter implements TranslationWriterInterface { private $dumpers = array(); public function addDumper($format, DumperInterface $dumper) { $this->dumpers[$format] = $dumper; } public function disableBackup() { foreach ($this->dumpers as $dumper) { if (method_exists($dumper, 'setBackup')) { $dumper->setBackup(false); } } } public function getFormats() { return array_keys($this->dumpers); } public function write(MessageCatalogue $catalogue, $format, $options = array()) { if (!isset($this->dumpers[$format])) { throw new InvalidArgumentException(sprintf('There is no dumper associated with format "%s".', $format)); } $dumper = $this->dumpers[$format]; if (isset($options['path']) && !is_dir($options['path']) && !@mkdir($options['path'], 0777, true) && !is_dir($options['path'])) { throw new RuntimeException(sprintf('Translation Writer was not able to create directory "%s"', $options['path'])); } $dumper->dump($catalogue, $options); } public function writeTranslations(MessageCatalogue $catalogue, $format, $options = array()) { @trigger_error(sprintf('Method %s() is deprecated since Symfony 3.4 and will be removed in 4.0. Use write() instead.', __METHOD__), E_USER_DEPRECATED); $this->write($catalogue, $format, $options); } } 