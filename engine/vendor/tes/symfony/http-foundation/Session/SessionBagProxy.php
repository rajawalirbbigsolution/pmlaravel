<?php
 namespace Symfony\Component\HttpFoundation\Session; final class SessionBagProxy implements SessionBagInterface { private $bag; private $data; private $hasBeenStarted; public function __construct(SessionBagInterface $bag, array &$data, &$hasBeenStarted) { $this->bag = $bag; $this->data = &$data; $this->hasBeenStarted = &$hasBeenStarted; } public function getBag() { return $this->bag; } public function isEmpty() { return empty($this->data[$this->bag->getStorageKey()]); } public function getName() { return $this->bag->getName(); } public function initialize(array &$array) { $this->hasBeenStarted = true; $this->data[$this->bag->getStorageKey()] = &$array; $this->bag->initialize($array); } public function getStorageKey() { return $this->bag->getStorageKey(); } public function clear() { return $this->bag->clear(); } } 