<?php
 namespace Symfony\Component\HttpKernel\Tests\CacheClearer; use PHPUnit\Framework\TestCase; use Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer; use Psr\Cache\CacheItemPoolInterface; class Psr6CacheClearerTest extends TestCase { public function testClearPoolsInjectedInConstructor() { $pool = $this->getMockBuilder(CacheItemPoolInterface::class)->getMock(); $pool ->expects($this->once()) ->method('clear'); (new Psr6CacheClearer(array('pool' => $pool)))->clear(''); } public function testClearPool() { $pool = $this->getMockBuilder(CacheItemPoolInterface::class)->getMock(); $pool ->expects($this->once()) ->method('clear'); (new Psr6CacheClearer(array('pool' => $pool)))->clearPool('pool'); } public function testClearPoolThrowsExceptionOnUnreferencedPool() { (new Psr6CacheClearer())->clearPool('unknown'); } public function testClearPoolsInjectedByAdder() { $pool1 = $this->getMockBuilder(CacheItemPoolInterface::class)->getMock(); $pool1 ->expects($this->once()) ->method('clear'); $pool2 = $this->getMockBuilder(CacheItemPoolInterface::class)->getMock(); $pool2 ->expects($this->once()) ->method('clear'); $clearer = new Psr6CacheClearer(array('pool1' => $pool1)); $clearer->addPool($pool2); $clearer->clear(''); } } 