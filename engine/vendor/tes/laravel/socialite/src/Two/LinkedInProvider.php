<?php
 namespace Laravel\Socialite\Two; use Illuminate\Support\Arr; class LinkedInProvider extends AbstractProvider implements ProviderInterface { protected $scopes = ['r_basicprofile', 'r_emailaddress']; protected $scopeSeparator = ' '; protected $fields = [ 'id', 'first-name', 'last-name', 'formatted-name', 'email-address', 'headline', 'location', 'industry', 'public-profile-url', 'picture-url', 'picture-urls::(original)', ]; protected function getAuthUrl($state) { return $this->buildAuthUrlFromBase('https://www.linkedin.com/oauth/v2/authorization', $state); } protected function getTokenUrl() { return 'https://www.linkedin.com/oauth/v2/accessToken'; } protected function getTokenFields($code) { return parent::getTokenFields($code) + ['grant_type' => 'authorization_code']; } protected function getUserByToken($token) { $fields = implode(',', $this->fields); $url = 'https://api.linkedin.com/v1/people/~:('.$fields.')'; $response = $this->getHttpClient()->get($url, [ 'headers' => [ 'x-li-format' => 'json', 'Authorization' => 'Bearer '.$token, ], ]); return json_decode($response->getBody(), true); } protected function mapUserToObject(array $user) { return (new User)->setRaw($user)->map([ 'id' => $user['id'], 'nickname' => null, 'name' => Arr::get($user, 'formattedName'), 'email' => Arr::get($user, 'emailAddress'), 'avatar' => Arr::get($user, 'pictureUrl'), 'avatar_original' => Arr::get($user, 'pictureUrls.values.0'), ]); } public function fields(array $fields) { $this->fields = $fields; return $this; } } 