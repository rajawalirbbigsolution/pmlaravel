<?php
 namespace Illuminate\Auth\Middleware; use Closure; use Illuminate\Database\Eloquent\Model; use Illuminate\Contracts\Auth\Access\Gate; use Illuminate\Contracts\Auth\Factory as Auth; class Authorize { protected $auth; protected $gate; public function __construct(Auth $auth, Gate $gate) { $this->auth = $auth; $this->gate = $gate; } public function handle($request, Closure $next, $ability, ...$models) { $this->auth->authenticate(); $this->gate->authorize($ability, $this->getGateArguments($request, $models)); return $next($request); } protected function getGateArguments($request, $models) { if (is_null($models)) { return []; } return collect($models)->map(function ($model) use ($request) { return $model instanceof Model ? $model : $this->getModel($request, $model); })->all(); } protected function getModel($request, $model) { return $this->isClassName($model) ? $model : $request->route($model); } protected function isClassName($value) { return strpos($value, '\\') !== false; } } 