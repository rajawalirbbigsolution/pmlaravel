<?php
 namespace Illuminate\Validation; trait ValidatesWhenResolvedTrait { public function validate() { $this->prepareForValidation(); $instance = $this->getValidatorInstance(); if (! $this->passesAuthorization()) { $this->failedAuthorization(); } elseif (! $instance->passes()) { $this->failedValidation($instance); } } protected function prepareForValidation() { } protected function getValidatorInstance() { return $this->validator(); } protected function failedValidation(Validator $validator) { throw new ValidationException($validator); } protected function passesAuthorization() { if (method_exists($this, 'authorize')) { return $this->authorize(); } return true; } protected function failedAuthorization() { throw new UnauthorizedException; } } 