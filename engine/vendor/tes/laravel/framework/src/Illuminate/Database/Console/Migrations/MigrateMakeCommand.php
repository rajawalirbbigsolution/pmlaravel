<?php
 namespace Illuminate\Database\Console\Migrations; use Illuminate\Support\Str; use Illuminate\Support\Composer; use Illuminate\Database\Migrations\MigrationCreator; class MigrateMakeCommand extends BaseCommand { protected $signature = 'make:migration {name : The name of the migration.}
        {--create= : The table to be created.}
        {--table= : The table to migrate.}
        {--path= : The location where the migration file should be created.}'; protected $description = 'Create a new migration file'; protected $creator; protected $composer; public function __construct(MigrationCreator $creator, Composer $composer) { parent::__construct(); $this->creator = $creator; $this->composer = $composer; } public function handle() { $name = Str::snake(trim($this->input->getArgument('name'))); $table = $this->input->getOption('table'); $create = $this->input->getOption('create') ?: false; if (! $table && is_string($create)) { $table = $create; $create = true; } if (! $table) { if (preg_match('/^create_(\w+)_table$/', $name, $matches)) { $table = $matches[1]; $create = true; } } $this->writeMigration($name, $table, $create); $this->composer->dumpAutoloads(); } protected function writeMigration($name, $table, $create) { $file = pathinfo($this->creator->create( $name, $this->getMigrationPath(), $table, $create ), PATHINFO_FILENAME); $this->line("<info>Created Migration:</info> {$file}"); } protected function getMigrationPath() { if (! is_null($targetPath = $this->input->getOption('path'))) { return $this->laravel->basePath().'/'.$targetPath; } return parent::getMigrationPath(); } } 