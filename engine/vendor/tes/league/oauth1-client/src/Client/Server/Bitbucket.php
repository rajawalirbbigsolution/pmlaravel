<?php
 namespace League\OAuth1\Client\Server; use League\OAuth1\Client\Credentials\TokenCredentials; class Bitbucket extends Server { public function urlTemporaryCredentials() { return 'https://bitbucket.org/api/1.0/oauth/request_token'; } public function urlAuthorization() { return 'https://bitbucket.org/api/1.0/oauth/authenticate'; } public function urlTokenCredentials() { return 'https://bitbucket.org/api/1.0/oauth/access_token'; } public function urlUserDetails() { return 'https://bitbucket.org/api/1.0/user'; } public function userDetails($data, TokenCredentials $tokenCredentials) { $user = new User(); $user->uid = $data['user']['username']; $user->nickname = $data['user']['username']; $user->name = $data['user']['display_name']; $user->firstName = $data['user']['first_name']; $user->lastName = $data['user']['last_name']; $user->imageUrl = $data['user']['avatar']; $used = array('username', 'display_name', 'avatar'); foreach ($data as $key => $value) { if (strpos($key, 'url') !== false) { if (!in_array($key, $used)) { $used[] = $key; } $user->urls[$key] = $value; } } $user->extra = array_diff_key($data, array_flip($used)); return $user; } public function userUid($data, TokenCredentials $tokenCredentials) { return $data['user']['username']; } public function userEmail($data, TokenCredentials $tokenCredentials) { return; } public function userScreenName($data, TokenCredentials $tokenCredentials) { return $data['user']['display_name']; } } 