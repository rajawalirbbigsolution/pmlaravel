<?php
 namespace League\OAuth1\Client\Server; use League\OAuth1\Client\Credentials\TokenCredentials; class Tumblr extends Server { public function urlTemporaryCredentials() { return 'https://www.tumblr.com/oauth/request_token'; } public function urlAuthorization() { return 'https://www.tumblr.com/oauth/authorize'; } public function urlTokenCredentials() { return 'https://www.tumblr.com/oauth/access_token'; } public function urlUserDetails() { return 'https://api.tumblr.com/v2/user/info'; } public function userDetails($data, TokenCredentials $tokenCredentials) { if (!isset($data['response']['user']) || !is_array($data['response']['user'])) { return; } $data = $data['response']['user']; $user = new User(); $user->nickname = $data['name']; $used = array('name'); $user->extra = array_diff_key($data, array_flip($used)); return $user; } public function userUid($data, TokenCredentials $tokenCredentials) { if (!isset($data['response']['user']) || !is_array($data['response']['user'])) { return; } $data = $data['response']['user']; return $data['name']; } public function userEmail($data, TokenCredentials $tokenCredentials) { return; } public function userScreenName($data, TokenCredentials $tokenCredentials) { if (!isset($data['response']['user']) || !is_array($data['response']['user'])) { return; } $data = $data['response']['user']; return $data['name']; } } 